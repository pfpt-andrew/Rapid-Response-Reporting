Identity Code,Summary,Description
OAT-001,Multiple payment authorisation attempts used to verify the validity of bulk stolen payment card data.,"Lists of full credit and/or debit card data are tested against a merchant’s payment processes to identify valid card details. The quality of stolen data is often unknown, and Carding is used to identify good data of higher value. Payment cardholder data may have been stolen from another application, stolen from a different payment channel, or acquired from a criminal marketplace. When partial cardholder data is available, and the expiry date and/or security code are not known, the process is instead known as OAT-010 Card Cracking. The use of stolen cards to obtain cash or goods is OAT-012 Cashing Out."
OAT-002,"Mass enumeration of coupon numbers, voucher codes, discount tokens, etc.","Identification of valid token codes providing some form of user benefit within the application. The benefit may be a cash alternative, a non-cash credit, a discount, or an opportunity such as access to a limited offer. For cracking of usernames, see OAT-007 Credential Cracking instead."
OAT-003,False clicks and fraudulent display of web-placed advertisements.,"Falsification of the number of times an item such as an advert is clicked on, or the number of times an advertisement is displayed. Performed by owners of web sites displaying ads, competitors and vandals. See OAT-016 Skewing instead for similar activity that does not involve web-placed advertisements."
OAT-004,Elicit information about the supporting software and framework types and versions.,"Specific requests are sent to the application eliciting information in order to profile the application. This probing typically examines HTTP header names and values, session identifier names and formats, contents of error page messages, URL path case sensitivity, URL path patterns, file extensions, and whether software-specific files and directories exist. Fingerprinting is often reliant on information leakage and this profiling may also reveal some network architecture/topology. The fingerprinting may be undertaken without any direct usage of the application, e.g. by querying a store of exposed application properties such as held in a search engine’s index. Fingerprinting seeks to identity application components, whereas OAT-018 Footprinting is a more detailed analysis of how the application works."
OAT-005,Obtain limited-availability and/or preferred goods/services by unfair methods.,"Acquisition of goods or services using the application in a manner that a normal user would be unable to undertake manually. Although Scalping may include monitoring awaiting availability of the goods or services, and then rapid action to beat normal users to obtain these, Scalping is not a “last minute” action like OAT-013 Sniping, nor just related to automation on behalf of the user such as in OAT-006 Expediting. This is because Scalping includes the additional concept of limited availability of sought-after goods or services, and is most well known in the ticketing business where the tickets acquired are then resold later at a profit by the scalpers/touts. This can also lead to a type of user denial of service, since the goods or services become unavailable rapidly."
OAT-006,"Perform actions to hasten progress of usually slow, tedious or time-consuming actions.","Using speed to violate explicit or implicit assumptions about the application’s normal use to achieve unfair individual gain, often associated with deceit and loss to some other party. In contrast to OAT-016 Skewing which affects metrics, Expediting is purely related to faster progression through a series of application processes. And OAT-017 Spamming is different to Expediting, since the focus of spam is to add information, and may not involve the concept of process progression."
OAT-007,Identify valid login credentials by trying different values for usernames and/or passwords.,"Brute force, dictionary (word list) and guessing attacks used against authentication processes of the application to identify valid account credentials. This may utilise common usernames or passwords, or involve initial username evaluation. The use of stolen credential sets (paired username and passwords) to authenticate at one or more services is OAT-008 Credential Stuffing."
OAT-008,Mass log in attempts used to verify the validity of stolen username/password pairs.,"Lists of authentication credentials stolen from elsewhere are tested against the application’s authentication mechanisms to identify whether users have re-used the same login credentials. The stolen usernames (often email addresses) and password pairs could have been sourced directly from another application by the attacker, purchased in a criminal marketplace, or obtained from publicly available breach data dumps. Unlike OAT-007 Credential Cracking, Credential Stuffing does not involve any bruteforcing or guessing of values; instead credentials used in other applications are being tested for validity."
OAT-009,Solve anti-automation tests.,"Completely Automated Public Turing test to tell Computers and Humans Apart (CAPTCHA) challenges are used to distinguish normal users from bots. Automation is used in an attempt to analyse and determine the answer to visual and/or aural CAPTCHA tests and related puzzles. Apart from conventional visual and aural CAPTCHA, puzzle solving mini games or arithmetical exercises are sometimes used. Some of these may include context-specific challenges. The process that determines the answer may utilise tools to perform optical character recognition, or matching against a prepared database of pre-generated images, or using other machine reading, or human farms."
OAT-010,Identify missing start/expiry dates and security codes for stolen payment card data by trying different values.,"Brute force attack against application payment card processes to identify the missing values for start date, expiry date and/or card security code (CSC), also referred to in many ways, including card validation number 2 (CVN2), card validation code (CVC), card verification value (CV2) and card identification number (CID). When these values are known as well as the Primary Account Number (PAN), OAT-001 Carding is used to validate the details, and OAT-012 Cashing Out to obtain goods or cash."
OAT-011,Collect application content and/or other data for use elsewhere.,"Collecting accessible data and/or processed output from the application. Some scraping may use fake or compromised accounts, or the information may be accessible without authentication. The scraper may attempt to read all accessible paths and parameter values for web pages and APIs, collecting the responses and extracting data from them. Scraping may occur in real time, or be more periodic in nature. Some Scraping may be used to gain insight into how it is constructed and operates - perhaps for cryptanalysis, reverse engineering, or session analysis. When another application is being used as an intermediary between the user(s) and the real application, see OAT-020 Account Aggregation. If the intent is to obtain cash or goods, see OAT-012 Cashing Out instead."
OAT-012,Buy goods or obtain cash utilising validated stolen payment card or other user account data.,"Obtaining currency or higher-value merchandise via the application using stolen, previously validated payment cards or other account login credentials. Cashing Out sometimes may be undertaken in conjunction with product return fraud. For financial transactions, this is usually a transfer of funds to a mule’s account. For payment cards, this activity may occur following OAT-001 Carding of bulk stolen data, or OAT-010 Card Cracking, and the goods are dropped at a reshipper’s address. The refunding of payments via non-financial applications (e.g. tax refunds, claims payment) is also included in Cashing Out. Obtaining other information of value from the application is instead OAT-011 Scraping."
OAT-013,Last minute bid or offer for goods or services.,"The defining characteristic of Sniping is an action undertaken at the latest opportunity to achieve a particular objective, leaving insufficient time for another user to bid/offer. Sniping can also be the automated exploitation of system latencies in the form of timing attacks. Careful timing and prompt action are necessary parts. It is most well known as auction sniping, but the same threat event can be used in other types of applications. Sniping normally leads to some disbenefit for other users, and sometimes that might be considered a form of denial of service. In contrast, OAT-005 Scalping is the acquisition of limited availability of sought-after goods or services, and OAT-006 Expediting is the general hastening of progress."
OAT-014,Crawl and fuzz application to identify weaknesses and possible vulnerabilities.,"Systematic enumeration and examination of identifiable, guessable and unknown content locations, paths, file names, parameters, in order to find weaknesses and points where a security vulnerability might exist. Vulnerability Scanning includes both malicious scanning and friendly scanning by an authorised vulnerability scanning engine. It differs from OAT-011 Scraping in that its aim is to identify potential vulnerabilities. The exploitation of individual vulnerabilities is not included in the scope of this ontology, but this process of scanning, along with OAT-018 Footprinting, OAT-004 Fingerprinting and OAT-011 Scraping often form part of application penetration testing."
OAT-015,"Target resources of the application and database servers, or individual user accounts, to achieve denial of service (DoS).","Usage may resemble legitimate application usage, but leads to exhaustion of resources such as file system, memory, processes, threads, CPU, and human or financial resources. The resources might be related to web, application or databases servers or other services supporting the application, such as third party APIs, included third-party hosted content, or content delivery networks (CDNs). The application may be affected as a whole, or the attack may be against individual users such as account lockout. This ontology’s scope excludes other forms of denial of service that affect web applications, namely HTTP Flood DoS (GET, POST, Header with/without TLS), HTTP Slow DoS, IP layer 3 DoS, and TCP layer 4 DoS. Those protocol and lower layer aspects are covered adequately in other taxonomies and lists."
OAT-016,"Repeated link clicks, page requests or form submissions intended to alter some metric.","Automated repeated clicking or requesting or submitting content, affecting application-based metrics such as counts and measures of frequency and/or rate. The metric or measurement may be visible to users (e.g. betting odds, likes, market/ dynamic pricing, visitor count, poll results, reviews) or hidden (e.g. application usage statistics, business performance indicators). Metrics may affect individuals as well as the application owner, e.g. user reputation, influence others, gain fame, or undermine someone else’s reputation. For malicious alteration of digital advertisement metrics, see OAT-003 Ad Fraud instead."
OAT-017,"Malicious or questionable information addition that appears in public or private content, databases or user messages.","Malicious content can include malware, IFRAME distribution, photographs & videos, advertisements, referrer spam and tracking/surveillance code. The content might be less overtly malicious but be an attempt to cause mischief, undertake search engine optimisation (SEO) or to dilute/hide other posts. The mass abuse of broken form-to-email and form-to-SMS functions to send messages to unintended recipients is not included in this threat event, or any other in this ontology, since those are considered to be the exploitation of implementation flaws alone. For multiple use that distorts metrics, see OAT-016 Skewing instead."
OAT-018,Probe and explore application to identify its constituents and properties.,"Information gathering with the objective of learning as much as possible about the composition, configuration and security mechanisms of the application. Unlike Scraping, Footprinting is an enumeration of the application itself, rather than the data. It is used to identify all the URL paths, parameters and values, and process sequences (i.e. to determine entry points, also collectively called the attack surface). As the application is explored, additional paths will be identified which in turn need to be examined. Footprinting can also include brute force, dictionary and guessing of file and directory names. Fuzzing may also be used to identify further application resources and capabilities. However, it does not include attempts to exploit weaknesses."
OAT-019,Create multiple accounts for subsequent misuse.,"Bulk account creation, and sometimes profile population, by using the application’s account sign-up processes. The accounts are subsequently misused for generating content spam, laundering cash and goods, spreading malware, affecting reputation, causing mischief, and skewing search engine optimisation (SEO), reviews and surveys. Account Creation generates new accounts - see OAT-007 Credential Cracking and OAT-008 Credential Stuffing for threat events that use existing accounts."
OAT-020,Use by an intermediary application that collects together multiple accounts and interacts on their behalf.,"Compilation of credentials and information from multiple application accounts into another system. This aggregation application may be used by a single user to merge information from multiple applications, or alternatively to merge information of many users of a single application. Commonly used for aggregating social media accounts, email accounts and financial accounts in order to obtain a consolidated overview, to provide integrated reporting and analysis, and to simplify usage and consumption by the user and/or their professional advisors. May include making changes to account properties and interacting with the aggregated application’s functionality. For other forms of data harvesting, including the distribution of content, see OAT-011 Scraping. For hastening progress, see OAT-006 Expediting instead."
OAT-021,Deplete goods or services stock without ever completing the purchase or committing to the transaction.,"Selection and holding of items from a limited inventory or stock, but which are never actually bought, or paid for, or confirmed, such that other users are unable to buy/ pay/confirm the items themselves. It differs from OAT-005 Scalping in that the goods or services are never actually acquired by the attacker. Denial of Inventory is most commonly thought of as taking ecommerce items out of circulation by adding many of them to a cart/basket; the attacker never actually proceeds to checkout to buy them but contributes to a possible stock-out condition. A variation of this automated threat event is making reservations (e.g. hotel rooms, restaurant tables, holiday bookings, flight seats), and/or click-and-collect without payment. But this exhaustion of inventory availability also occurs in other types of web application such as in the assignment of non-goods like service allocations, product rations, availability slots, queue positions, and budget apportionments. If server resources are reduced see OAT-015 Denial of Service instead. Like OAT-005 Scalping , Denial of Inventory also reduces the availability of goods or services."
